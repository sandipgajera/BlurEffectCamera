package com.photo.blureffectcamera.pointlist;

import android.graphics.PointF;

import com.photo.blureffectcamera.lyrebirdlib.BlurBuilderNormal;

import java.util.ArrayList;
import java.util.List;

public class Collage2 extends Collage {
    public static int shapeCount;

    static {
        shapeCount = 2;
    }

    public Collage2(int width, int height) {
        this.collageLayoutList = new ArrayList();
        List<PointF[]> shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(0.5f * ((float) width), ((float) height) * 1.0f), new PointF(0.5f * ((float) width), ((float) height) * 0.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f)});
        shapeList.add(new PointF[]{new PointF(0.5f * ((float) width), ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(0.5f * ((float) width), ((float) height) * 1.0f)});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, 0.5f * ((float) height)), new PointF(((float) width) * 1.0f, 0.5f * ((float) height)), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, 0.5f * ((float) height)), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, 0.5f * ((float) height))});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, 0.72f * ((float) height)), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(0.8f * ((float) width), ((float) height) * 0.0f), new PointF(0.8f * ((float) width), 0.72f * ((float) height))});
        shapeList.add(new PointF[]{new PointF(((float) width) * 1.0f, 0.55f * ((float) height)), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(0.5f * ((float) width), ((float) height) * 1.0f), new PointF(0.5f * ((float) width), 0.55f * ((float) height))});
        CollageLayout collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.maskPairListSvg.add(new MaskPairSvg(0, 0));
        collageLayout.maskPairListSvg.add(new MaskPairSvg(1, 0));
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, 0.3f * ((float) height)), new PointF(0.7f * ((float) width), 0.3f * ((float) height)), new PointF(0.7f * ((float) width), ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, 0.45f * ((float) height)), new PointF(0.55f * ((float) width), 0.45f * ((float) height)), new PointF(0.55f * ((float) width), ((float) height) * 0.0f)});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.maskPairListSvg.add(new MaskPairSvg(0, 1));
        collageLayout.maskPairListSvg.add(new MaskPairSvg(1, 1));
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(0.6f * ((float) width), ((float) height) * 1.0f), new PointF(0.6f * ((float) width), ((float) height) * 0.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f)});
        shapeList.add(new PointF[]{new PointF(BlurBuilderNormal.BITMAP_SCALE * ((float) width), ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(BlurBuilderNormal.BITMAP_SCALE * ((float) width), ((float) height) * 1.0f)});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.maskPairListSvg.add(new MaskPairSvg(0, 0));
        collageLayout.maskPairListSvg.add(new MaskPairSvg(1, 0));
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(0.6f * ((float) width), ((float) height) * 1.0f), new PointF(0.6f * ((float) width), ((float) height) * 0.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f)});
        shapeList.add(new PointF[]{new PointF(BlurBuilderNormal.BITMAP_SCALE * ((float) width), ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(BlurBuilderNormal.BITMAP_SCALE * ((float) width), ((float) height) * 1.0f)});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.maskPairListSvg.add(new MaskPairSvg(0, 9));
        collageLayout.maskPairListSvg.add(new MaskPairSvg(1, 9));
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(0.6f * ((float) width), ((float) height) * 1.0f), new PointF(0.6f * ((float) width), ((float) height) * 0.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f)});
        shapeList.add(new PointF[]{new PointF(BlurBuilderNormal.BITMAP_SCALE * ((float) width), ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(BlurBuilderNormal.BITMAP_SCALE * ((float) width), ((float) height) * 1.0f)});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.maskPairListSvg.add(new MaskPairSvg(0, 1));
        collageLayout.maskPairListSvg.add(new MaskPairSvg(1, 1));
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.13f * ((float) width), 0.13f * ((float) height)), new PointF(0.13f * ((float) width), 0.87f * ((float) height)), new PointF(0.87f * ((float) width), 0.87f * ((float) height)), new PointF(0.87f * ((float) width), 0.13f * ((float) height))});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.maskPairListSvg.add(new MaskPairSvg(1, 0));
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.23f * ((float) width), 0.23f * ((float) height)), new PointF(0.23f * ((float) width), 0.77f * ((float) height)), new PointF(0.77f * ((float) width), 0.77f * ((float) height)), new PointF(0.77f * ((float) width), 0.23f * ((float) height))});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.maskPairListSvg.add(new MaskPairSvg(1, 1));
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.17f * ((float) width), 0.17f * ((float) height)), new PointF(0.17f * ((float) width), 0.83f * ((float) height)), new PointF(0.83f * ((float) width), 0.83f * ((float) height)), new PointF(0.83f * ((float) width), 0.17f * ((float) height))});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.maskPairListSvg.add(new MaskPairSvg(1, 35));
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.23f * ((float) width), 0.23f * ((float) height)), new PointF(0.23f * ((float) width), 0.77f * ((float) height)), new PointF(0.77f * ((float) width), 0.77f * ((float) height)), new PointF(0.77f * ((float) width), 0.23f * ((float) height))});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.5f * ((float) width), 0.2f * ((float) height)), new PointF(0.846f * ((float) width), 0.8f * ((float) height)), new PointF(0.154f * ((float) width), 0.8f * ((float) height))});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, 0.33333334f * ((float) height)), new PointF(((float) width) * 1.0f, 0.33333334f * ((float) height)), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, 0.33333334f * ((float) height)), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, 0.33333334f * ((float) height))});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.13f * ((float) width), 0.13f * ((float) height)), new PointF(0.13f * ((float) width), 0.87f * ((float) height)), new PointF(0.87f * ((float) width), 0.87f * ((float) height)), new PointF(0.87f * ((float) width), 0.13f * ((float) height))});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.maskPairListSvg.add(new MaskPairSvg(1, 7));
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, 0.5833f * ((float) height)), new PointF(0.1667f * ((float) width), 0.41667f * ((float) height)), new PointF(0.333f * ((float) width), 0.5833f * ((float) height)), new PointF(0.5f * ((float) width), 0.41667f * ((float) height)), new PointF(0.6667f * ((float) width), 0.5833f * ((float) height)), new PointF(0.8333f * ((float) width), 0.41667f * ((float) height)), new PointF((float) (width * 1), 0.5833f * ((float) height)), new PointF((float) (width * 1), (float) (height * 1))});
        shapeList.add(new PointF[]{new PointF((float) (width * 0), 0.5833f * ((float) height)), new PointF((float) (width * 0), (float) (height * 0)), new PointF((float) (width * 1), (float) (height * 0)), new PointF((float) (width * 1), 0.5833f * ((float) height)), new PointF(0.8333f * ((float) width), 0.41667f * ((float) height)), new PointF(0.6667f * ((float) width), 0.5833f * ((float) height)), new PointF(0.5f * ((float) width), 0.41667f * ((float) height)), new PointF(0.333f * ((float) width), 0.5833f * ((float) height)), new PointF(0.1667f * ((float) width), 0.41667f * ((float) height))});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.checkForConcavite = true;
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.13f * ((float) width), 0.13f * ((float) height)), new PointF(0.13f * ((float) width), 0.87f * ((float) height)), new PointF(0.87f * ((float) width), 0.87f * ((float) height)), new PointF(0.87f * ((float) width), 0.13f * ((float) height))});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.maskPairListSvg.add(new MaskPairSvg(1, 9));
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, 0.5f * ((float) height)), new PointF(((float) width) * 1.0f, 0.33333334f * ((float) height)), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, 0.5f * ((float) height)), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, 0.33333334f * ((float) height))});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, 0.6666667f * ((float) height)), new PointF(((float) width) * 1.0f, 0.6666667f * ((float) height)), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, 0.6666667f * ((float) height)), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, 0.6666667f * ((float) height))});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, 0.33333334f * ((float) height)), new PointF(((float) width) * 1.0f, 0.6666667f * ((float) height)), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, 0.33333334f * ((float) height)), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, 0.6666667f * ((float) height))});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.55f * ((float) width), 0.55f * ((float) height)), new PointF(0.55f * ((float) width), 0.88f * ((float) height)), new PointF(0.88f * ((float) width), 0.88f * ((float) height)), new PointF(0.88f * ((float) width), 0.55f * ((float) height))});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(BlurBuilderNormal.BITMAP_SCALE * ((float) width), 0.45f * ((float) height)), new PointF(BlurBuilderNormal.BITMAP_SCALE * ((float) width), 0.93f * ((float) height)), new PointF(0.88f * ((float) width), 0.93f * ((float) height)), new PointF(0.88f * ((float) width), 0.45f * ((float) height))});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.maskPairListSvg.add(new MaskPairSvg(1, 1));
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(BlurBuilderNormal.BITMAP_SCALE * ((float) width), 0.45f * ((float) height)), new PointF(BlurBuilderNormal.BITMAP_SCALE * ((float) width), 0.93f * ((float) height)), new PointF(0.88f * ((float) width), 0.93f * ((float) height)), new PointF(0.88f * ((float) width), 0.45f * ((float) height))});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.maskPairListSvg.add(new MaskPairSvg(1, 0));
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(0.33333334f * ((float) width), ((float) height) * 0.0f), new PointF(0.33333334f * ((float) width), ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.33333334f * ((float) width), ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(0.33333334f * ((float) width), ((float) height) * 1.0f)});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(0.33333334f * ((float) width), ((float) height) * 0.0f), new PointF(0.6666667f * ((float) width), ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.33333334f * ((float) width), ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(0.6666667f * ((float) width), ((float) height) * 1.0f)});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(0.6666667f * ((float) width), ((float) height) * 0.0f), new PointF(0.6666667f * ((float) width), ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.6666667f * ((float) width), ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(0.6666667f * ((float) width), ((float) height) * 1.0f)});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(0.6666667f * ((float) width), ((float) height) * 0.0f), new PointF(0.33333334f * ((float) width), ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.6666667f * ((float) width), ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f), new PointF(0.33333334f * ((float) width), ((float) height) * 1.0f)});
        this.collageLayoutList.add(new CollageLayout(shapeList));
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(0.5833f * ((float) width), ((float) height) * 0.0f), new PointF(0.41667f * ((float) width), 0.1667f * ((float) height)), new PointF(0.5833f * ((float) width), 0.333f * ((float) height)), new PointF(0.41667f * ((float) width), 0.5f * ((float) height)), new PointF(0.5833f * ((float) width), 0.6667f * ((float) height)), new PointF(0.41667f * ((float) width), 0.8333f * ((float) height)), new PointF(0.5833f * ((float) width), (float) (height * 1)), new PointF((float) (width * 1), (float) (height * 1))});
        shapeList.add(new PointF[]{new PointF(0.5833f * ((float) width), (float) (height * 0)), new PointF((float) (width * 0), (float) (height * 0)), new PointF((float) (width * 0), (float) (height * 1)), new PointF(0.5833f * ((float) width), (float) (height * 1)), new PointF(0.41667f * ((float) width), 0.8333f * ((float) height)), new PointF(0.5833f * ((float) width), 0.6667f * ((float) height)), new PointF(0.41667f * ((float) width), 0.5f * ((float) height)), new PointF(0.5833f * ((float) width), 0.333f * ((float) height)), new PointF(0.41667f * ((float) width), 0.1667f * ((float) height))});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.checkForConcavite = true;
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.25f * ((float) width), 0.35f * ((float) height)), new PointF(0.5f * ((float) width), 0.2f * ((float) height)), new PointF(0.75f * ((float) width), 0.35f * ((float) height)), new PointF(0.75f * ((float) width), 0.65f * ((float) height)), new PointF(0.5f * ((float) width), 0.8f * ((float) height)), new PointF(0.25f * ((float) width), 0.65f * ((float) height))});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.5f * ((float) width), 0.25f * ((float) height)), new PointF(0.75f * ((float) width), 0.5f * ((float) height)), new PointF(0.5f * ((float) width), 0.75f * ((float) height)), new PointF(0.25f * ((float) width), 0.5f * ((float) height))});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.32738096f * ((float) width), 0.26190478f * ((float) height)), new PointF(0.67261904f * ((float) width), 0.26190478f * ((float) height)), new PointF(0.7797619f * ((float) width), 0.5909864f * ((float) height)), new PointF(0.5f * ((float) width), 0.7942177f * ((float) height)), new PointF(0.22023809f * ((float) width), 0.5909864f * ((float) height))});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
        shapeList = new ArrayList();
        shapeList.add(new PointF[]{new PointF(((float) width) * 0.0f, ((float) height) * 1.0f), new PointF(((float) width) * 0.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 0.0f), new PointF(((float) width) * 1.0f, ((float) height) * 1.0f)});
        shapeList.add(new PointF[]{new PointF(0.5f * ((float) width), 0.8f * ((float) height)), new PointF(0.846f * ((float) width), 0.2f * ((float) height)), new PointF(0.154f * ((float) width), 0.2f * ((float) height))});
        collageLayout = new CollageLayout(shapeList);
        collageLayout.useLine = false;
        collageLayout.setClearIndex(1);
        this.collageLayoutList.add(collageLayout);
    }
}
